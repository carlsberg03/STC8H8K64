C51 COMPILER V9.00   ISR                                                                   05/18/2022 20:41:02 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: D:\Keil\Keil_5\C51\BIN\C51.EXE ..\USER\src\isr.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\L
                    -ibraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\COD
                    -E) DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          isr
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8H8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          #include "headfile.h"
  20          
  21          //UART1中断
  22          void UART1_Isr() interrupt 4
  23          {
  24   1          uint8 res;
  25   1        static uint8 dwon_count;
  26   1          if(UART1_GET_TX_FLAG)
  27   1          {
  28   2              UART1_CLEAR_TX_FLAG;
  29   2              busy[1] = 0;
  30   2          }
  31   1          if(UART1_GET_RX_FLAG)
  32   1          {
  33   2              UART1_CLEAR_RX_FLAG;
  34   2              res = SBUF;
  35   2              //程序自动下载
  36   2              if(res == 0x7F)
  37   2              {
  38   3                  if(dwon_count++ > 20)
  39   3                      IAP_CONTR = 0x60;
  40   3              }
  41   2              else
  42   2              {
  43   3                  dwon_count = 0;
  44   3              }
  45   2          }
  46   1      }
  47          
  48          //UART2中断
  49          void UART2_Isr() interrupt 8
  50          {
  51   1          if(UART2_GET_TX_FLAG)
C51 COMPILER V9.00   ISR                                                                   05/18/2022 20:41:02 PAGE 2   

  52   1        {
  53   2              UART2_CLEAR_TX_FLAG;
  54   2          busy[2] = 0;
  55   2        }
  56   1          if(UART2_GET_RX_FLAG)
  57   1        {
  58   2              UART2_CLEAR_RX_FLAG;
  59   2          //接收数据寄存器为：S2BUF
  60   2      
  61   2        }
  62   1      }
  63          
  64          
  65          //UART3中断
  66          void UART3_Isr() interrupt 17
  67          {
  68   1          if(UART3_GET_TX_FLAG)
  69   1        {
  70   2              UART3_CLEAR_TX_FLAG;
  71   2          busy[3] = 0;
  72   2        }
  73   1          if(UART3_GET_RX_FLAG)
  74   1        {
  75   2              UART3_CLEAR_RX_FLAG;
  76   2          //接收数据寄存器为：S3BUF
  77   2      
  78   2        }
  79   1      }
  80          
  81          
  82          //UART4中断
  83          void UART4_Isr() interrupt 18
  84          {
  85   1          if(UART4_GET_TX_FLAG)
  86   1        {
  87   2              UART4_CLEAR_TX_FLAG;
  88   2          busy[4] = 0;
  89   2        }
  90   1          if(UART4_GET_RX_FLAG)
  91   1        {
  92   2              UART4_CLEAR_RX_FLAG;
  93   2          //S4BUF;
  94   2      
  95   2        }
  96   1      }
  97          
  98          
  99          
 100          void INT0_Isr() interrupt 0
 101          {
 102   1      
 103   1      }
 104          void INT1_Isr() interrupt 2
 105          {
 106   1      
 107   1      }
 108          void INT2_Isr() interrupt 10
 109          {
 110   1        INT2_CLEAR_FLAG;  //清除中断标志
 111   1      }
 112          void INT3_Isr() interrupt 11
 113          {
C51 COMPILER V9.00   ISR                                                                   05/18/2022 20:41:02 PAGE 3   

 114   1        INT3_CLEAR_FLAG;  //清除中断标志
 115   1      }
 116          
 117          void INT4_Isr() interrupt 16
 118          {
 119   1        INT4_CLEAR_FLAG;  //清除中断标志
 120   1      }
 121          
 122          void TM0_Isr() interrupt 1
 123          {
 124   1      
 125   1      }
 126          void TM1_Isr() interrupt 3
 127          {
 128   1      
 129   1      }
 130          void TM2_Isr() interrupt 12
 131          {
 132   1        TIM2_CLEAR_FLAG;  //清除中断标志
 133   1        
 134   1      }
 135          void TM3_Isr() interrupt 19
 136          {
 137   1        TIM3_CLEAR_FLAG; //清除中断标志
 138   1        ccd_collect();
 139   1        
 140   1      }
 141          
 142          void TIM4_CLEAR_IT(void)
 143          {
 144   1          AUXINTIF &= ~0x04;
 145   1      }
 146            
 147          #define LED P70
 148          void TM4_Isr() interrupt 20
 149          {
 150   1        static uint16 count = 0;
 151   1        //TIM4_CLEAR_FLAG; //清除中断标志
 152   1          TIM4_CLEAR_IT();
 153   1        if(count++ >= 1000)//进入1000次中断 翻转一次LED，也就是1000MS 翻转一次LED
 154   1        {
 155   2          LED = !LED;
 156   2          count = 0;
 157   2        }
 158   1      }
 159          
 160          //void  INT0_Isr()  interrupt 0;
 161          //void  TM0_Isr()   interrupt 1;
 162          //void  INT1_Isr()  interrupt 2;
 163          //void  TM1_Isr()   interrupt 3;
 164          //void  UART1_Isr() interrupt 4;
 165          //void  ADC_Isr()   interrupt 5;
 166          //void  LVD_Isr()   interrupt 6;
 167          //void  PCA_Isr()   interrupt 7;
 168          //void  UART2_Isr() interrupt 8;
 169          //void  SPI_Isr()   interrupt 9;
 170          //void  INT2_Isr()  interrupt 10;
 171          //void  INT3_Isr()  interrupt 11;
 172          //void  TM2_Isr()   interrupt 12;
 173          //void  INT4_Isr()  interrupt 16;
 174          //void  UART3_Isr() interrupt 17;
 175          //void  UART4_Isr() interrupt 18;
C51 COMPILER V9.00   ISR                                                                   05/18/2022 20:41:02 PAGE 4   

 176          //void  TM3_Isr()   interrupt 19;
 177          //void  TM4_Isr()   interrupt 20;
 178          //void  CMP_Isr()   interrupt 21;
 179          //void  I2C_Isr()   interrupt 24;
 180          //void  USB_Isr()   interrupt 25;
 181          //void  PWM1_Isr()  interrupt 26;
 182          //void  PWM2_Isr()  interrupt 27;


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    369    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
