C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 23:42:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out_File\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\USER\src\main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libr
                    -aries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\CODE) 
                    -DEBUG PRINT(.\Out_File\main.lst) OBJECT(.\Out_File\main.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file                main
  11           * @company                     成都逐飞科技有限公司
  12           * @author              逐飞科技(QQ790875685)
  13           * @version             查看doc内version文件 版本说明
  14           * @Software            MDK FOR C51 V9.60
  15           * @Target core         STC8H8K64S4
  16           * @Taobao              https://seekfree.taobao.com/
  17           * @date                2020-06-01
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "headfile.h"
  21          
  22          //board.h文件中FOSC的值设置为0,则程序自动识别系统频率
  23          
  24          /*board.h文件中FOSC的值设置不为0，则系统频率为FOSC的值，
  25          在使用stc-isp工具下载程序的时候需要将IRC频率设置为FOSC的值*/
  26          
  27          /*在board_init中,已经将P54引脚设置为复位
  28          如果需要使用P54引脚,可以在board.c文件中的board_init()函数中删除SET_P54_RESRT即可*/
  29          
  30          #define KEY0 P34
  31          #define KEY1 P35
  32          #define KEY2 P36
  33          #define KEY3 P37
  34          #define KEY0_PRESS 1
  35          #define KEY1_PRESS 2
  36          #define KEY2_PRESS 3
  37          #define KEY3_PRESS 4
  38          #define LED0 P70
  39          #define LED1 P71
  40          #define LED2 P72
  41          #define LED3 P73
  42          
  43          #define BEEP P11
  44          
  45          uint8 key_scan(void)
  46          {
  47   1          if((KEY0==0)||(KEY1==0)||(KEY2==0)||(KEY3==0))
  48   1              {
  49   2                      delay_ms(10);//去抖动 
  50   2                      if(KEY0==0)
  51   2                      {
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 23:42:59 PAGE 2   

  52   3                              while(!KEY0)
  53   3                                      ;
  54   3                  LED0=!LED0;
  55   3                              return KEY0_PRESS;
  56   3                      }
  57   2                      if(KEY1==0)
  58   2                      {
  59   3                              while(!KEY1)
  60   3                                      ;
  61   3                  LED1=!LED1;
  62   3                              return KEY1_PRESS;
  63   3                      }
  64   2              if(KEY2==0)
  65   2                      {
  66   3                              while(!KEY2)
  67   3                                      ;
  68   3                  LED2=!LED2;
  69   3                              return KEY2_PRESS;
  70   3                      }
  71   2              if(KEY3==0)
  72   2                      {
  73   3                              while(!KEY3)
  74   3                                      ;
  75   3                  LED3=!LED3;
  76   3                              return KEY3_PRESS;
  77   3                      }
  78   2              }            
  79   1              return 0;// 无按键按下
  80   1      }
  81          
  82          uint16 duty[5];
  83          uint16 adc_data[4];
  84          void main()
  85          {
  86   1              DisableGlobalIRQ();     //关闭总中断
  87   1              board_init();   
  88   1              
  89   1              pwm_init(PWM7_P33, 50, 0);//舵机,初始化PWM7  使用引脚P3.3  输出PWM频率50HZ   占空比为百分之 5000/PWM_DUTY
             -_MAX*100
  90   1          
  91   1          adc_init(ADC_P00, ADC_SYSclk_DIV_2);        //初始化ADC,P1.0通道 ，ADC时钟频率：SYSclk/2
  92   1              adc_init(ADC_P01, ADC_SYSclk_DIV_2);    //初始化ADC,P1.1通道 ，ADC时钟频率：SYSclk/2
  93   1          adc_init(ADC_P02, ADC_SYSclk_DIV_2);        //初始化ADC,P1.0通道 ，ADC时钟频率：SYSclk/2
  94   1              adc_init(ADC_P03, ADC_SYSclk_DIV_2);    //初始化ADC,P1.1通道 ，ADC时钟频率：SYSclk/2
  95   1          
  96   1          pwm_init(PWM1P_P20, 500, 6000);//电机1
  97   1          pwm_init(PWM2P_P22, 500, 6000);//电机2
  98   1          pwm_init(PWM3P_P24, 500, 6000);//电机3
  99   1          pwm_init(PWM4P_P26, 500, 6000);//电机4
 100   1          
 101   1          pwm_init(PWM1N_P21, 500, 3000);
 102   1          pwm_init(PWM2N_P23, 500, 3000);   
 103   1          pwm_init(PWM3N_P25, 500, 3000);
 104   1          pwm_init(PWM4N_P27, 500, 3000);
 105   1          
 106   1          
 107   1          duty[0]=5000;
 108   1          duty[1]=5000;
 109   1          duty[2]=5000;
 110   1          duty[3]=5000;
 111   1          duty[4]=800;
 112   1          
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 23:42:59 PAGE 3   

 113   1          pwm_duty(PWM1P_P20, duty[0]);
 114   1          pwm_duty(PWM2P_P22, duty[1]);
 115   1          pwm_duty(PWM3P_P24, duty[2]);
 116   1          pwm_duty(PWM4P_P26, duty[3]);
 117   1          pwm_duty(PWM7_P33, duty[4]);
 118   1          
 119   1          oled_init(); 
 120   1              oled_p6x8str(0,0,"init success");
 121   1          oled_cls();
 122   1          P1M0=P1M0|0x02;
 123   1          BEEP=1;
 124   1          delay_ms(200);
 125   1          BEEP=0;
 126   1              EnableGlobalIRQ();      //开启总中断
 127   1          while(1)
 128   1              {  
 129   2              adc_data[0] = adc_once(ADC_P00, ADC_12BIT);
 130   2              oled_p6x8num(0,0,adc_data[0]);
 131   2              adc_data[1] = adc_once(ADC_P01, ADC_12BIT);
 132   2              oled_p6x8num(0,1,adc_data[1]);
 133   2              adc_data[2] = adc_once(ADC_P02, ADC_12BIT);
 134   2              oled_p6x8num(0,2,adc_data[2]);
 135   2              adc_data[3] = adc_once(ADC_P03, ADC_12BIT);
 136   2              oled_p6x8num(0,3,adc_data[3]);
 137   2              
 138   2              oled_p6x8num(0,4,duty[0]);
 139   2              oled_p6x8num(0,5,duty[1]);
 140   2              oled_p6x8num(0,6,duty[2]);
 141   2              oled_p6x8num(0,7,duty[3]);
 142   2              oled_p6x8num(64,7,duty[4]);
 143   2              switch(key_scan())
 144   2              {
 145   3                  case KEY0_PRESS:
 146   3                  {
 147   4                      if(duty[0]==8000)
 148   4                      {
 149   5                          duty[0]=2000;
 150   5                          pwm_duty(PWM1P_P20, 5000);
 151   5                          delay_ms(200);
 152   5                      }
 153   4                      else
 154   4                          duty[0]+=1000;
 155   4                      pwm_duty(PWM1P_P20, duty[0]);
 156   4                      break;
 157   4                  }
 158   3                  case KEY1_PRESS:
 159   3                  {
 160   4                      if(duty[1]==8000)
 161   4                      {
 162   5                          duty[1]=2000;
 163   5                          pwm_duty(PWM2P_P22, 5000);
 164   5                          delay_ms(200);
 165   5                      }
 166   4                      else
 167   4                          duty[1]+=1000;
 168   4                      pwm_duty(PWM2P_P22, duty[1]);
 169   4                      break;
 170   4                  }
 171   3                  case KEY2_PRESS:
 172   3                  {
 173   4                      if(duty[2]==8000)
 174   4                      {
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 23:42:59 PAGE 4   

 175   5                          duty[2]=2000;
 176   5                          pwm_duty(PWM3P_P24, 5000);
 177   5                          delay_ms(200);
 178   5                      }
 179   4                      else
 180   4                          duty[2]+=1000;
 181   4                      pwm_duty(PWM3P_P24, duty[2]);
 182   4                      break;
 183   4                  }
 184   3                  case KEY3_PRESS:
 185   3                  {
 186   4                      if(duty[3]==8000)
 187   4                      {
 188   5                          duty[3]=2000;
 189   5                          pwm_duty(PWM4P_P26, 5000);
 190   5                          delay_ms(200);
 191   5                      }
 192   4                      else
 193   4                          duty[3]+=1000;
 194   4                      pwm_duty(PWM4P_P26, duty[3]);
 195   4                      
 196   4                      
 197   4                      if(duty[4]==900)
 198   4                      {
 199   5                          duty[4]=700;
 200   5                          pwm_duty(PWM7_P33,  800);
 201   5                          delay_ms(200);
 202   5                      }
 203   4                      else
 204   4                          duty[4]+=25;
 205   4                      pwm_duty(PWM7_P33, duty[4]);
 206   4                      break;
 207   4                  }
 208   3                  default:break;
 209   3              }
 210   2              
 211   2          }
 212   1      }
 213          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1001    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
