C51 COMPILER V9.00   MAIN                                                                  05/18/2022 22:20:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out_File\main.obj
COMPILER INVOKED BY: D:\Keil\Keil_5\C51\BIN\C51.EXE ..\USER\src\main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\
                    -Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\CO
                    -DE) DEBUG PRINT(.\Out_File\main.lst) TABS(2) OBJECT(.\Out_File\main.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          main
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8H8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-06-01
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "headfile.h"
  21          
  22          //board.h文件中FOSC的值设置为0,则程序自动识别系统频率
  23          
  24          /*board.h文件中FOSC的值设置不为0，则系统频率为FOSC的值，
  25          在使用stc-isp工具下载程序的时候需要将IRC频率设置为FOSC的值*/
  26          
  27          /*在board_init中,已经将P54引脚设置为复位
  28          如果需要使用P54引脚,可以在board.c文件中的board_init()函数中删除SET_P54_RESRT即可*/
  29          
  30          #define KEY0 P34
  31          #define KEY1 P35
  32          #define KEY2 P36
  33          #define KEY3 P37
  34          #define KEY0_PRESS 1
  35          #define KEY1_PRESS 2
  36          #define KEY2_PRESS 3
  37          #define KEY3_PRESS 4
  38          #define LED0 P70
  39          #define LED1 P71
  40          #define LED2 P72
  41          #define LED3 P73
  42          
  43          #define BEEP P11
  44          
  45          uint8 key_scan(void)
  46          {
  47   1          if((KEY0==0)||(KEY1==0)||(KEY2==0)||(KEY3==0))
  48   1        {
  49   2          delay_ms(10);//去抖动 
  50   2          if(KEY0==0)
  51   2          {
C51 COMPILER V9.00   MAIN                                                                  05/18/2022 22:20:21 PAGE 2   

  52   3            while(!KEY0)
  53   3              ;
  54   3                  LED0=!LED0;
  55   3            return KEY0_PRESS;
  56   3          }
  57   2          if(KEY1==0)
  58   2          {
  59   3            while(!KEY1)
  60   3              ;
  61   3                  LED1=!LED1;
  62   3            return KEY1_PRESS;
  63   3          }
  64   2              if(KEY2==0)
  65   2          {
  66   3            while(!KEY2)
  67   3              ;
  68   3                  LED2=!LED2;
  69   3            return KEY2_PRESS;
  70   3          }
  71   2              if(KEY3==0)
  72   2          {
  73   3            while(!KEY3)
  74   3              ;
  75   3                  LED3=!LED3;
  76   3            return KEY3_PRESS;
  77   3          }
  78   2        }        
  79   1        return 0;// 无按键按下
  80   1      }
  81          
  82          uint16 duty[5];
  83          void main()
  84          {
  85   1        DisableGlobalIRQ(); //关闭总中断
  86   1        board_init(); 
  87   1        
  88   1        pwm_init(PWM7_P33, 50, 0);//舵机,初始化PWM7  使用引脚P3.3  输出PWM频率50HZ   占空比为百分之 5000/PWM_DUTY
             -_MAX*100
  89   1          
  90   1          pwm_init(PWM1P_P20, 500, 6000);//电机1
  91   1          pwm_init(PWM2P_P22, 500, 6000);//电机2
  92   1          pwm_init(PWM3P_P24, 500, 6000);//电机3
  93   1          pwm_init(PWM4P_P26, 500, 6000);//电机4
  94   1          
  95   1          pwm_init(PWM1N_P21, 500, 3000);
  96   1          pwm_init(PWM2N_P23, 500, 3000);   
  97   1          pwm_init(PWM3N_P25, 500, 3000);
  98   1          pwm_init(PWM4N_P27, 500, 3000);
  99   1          
 100   1          
 101   1          duty[0]=5000;
 102   1          duty[1]=5000;
 103   1          duty[2]=5000;
 104   1          duty[3]=5000;
 105   1          duty[4]=800;
 106   1          
 107   1          pwm_duty(PWM1P_P20, duty[0]);
 108   1          pwm_duty(PWM2P_P22, duty[1]);
 109   1          pwm_duty(PWM3P_P24, duty[2]);
 110   1          pwm_duty(PWM4P_P26, duty[3]);
 111   1          pwm_duty(PWM7_P33, duty[4]);
 112   1          
C51 COMPILER V9.00   MAIN                                                                  05/18/2022 22:20:21 PAGE 3   

 113   1          oled_init(); 
 114   1        oled_p6x8str(0,0,"init success");
 115   1          oled_cls();
 116   1      
 117   1        EnableGlobalIRQ();  //开启总中断
 118   1          while(1)
 119   1        {  
 120   2              oled_p6x8num(0,4,duty[0]);
 121   2              oled_p6x8num(0,5,duty[1]);
 122   2              oled_p6x8num(0,6,duty[2]);
 123   2              oled_p6x8num(0,7,duty[3]);
 124   2              oled_p6x8num(64,7,duty[4]);
 125   2              switch(key_scan())
 126   2              {
 127   3                  case KEY0_PRESS:
 128   3                  {
 129   4                      if(duty[0]==8000)
 130   4                      {
 131   5                          duty[0]=2000;
 132   5                          pwm_duty(PWM1P_P20, 5000);//反转时先刹车
 133   5                          delay_ms(200);
 134   5                      }
 135   4                      else
 136   4                          duty[0]+=100;
 137   4                      pwm_duty(PWM1P_P20, duty[0]);
 138   4                      break;
 139   4                  }
 140   3                  case KEY1_PRESS:
 141   3                  {
 142   4                      if(duty[1]==8000)
 143   4                      {
 144   5                          duty[1]=2000;
 145   5                          pwm_duty(PWM2P_P22, 5000);//反转时先刹车
 146   5                          delay_ms(200);
 147   5                      }
 148   4                      else
 149   4                          duty[1]+=100;
 150   4                      pwm_duty(PWM2P_P22, duty[1]);
 151   4                      break;
 152   4                  }
 153   3                  case KEY2_PRESS:
 154   3                  {
 155   4                      if(duty[2]==8000)
 156   4                      {
 157   5                          duty[2]=2000;
 158   5                          pwm_duty(PWM3P_P24, 5000);//反转时先刹车
 159   5                          delay_ms(200);
 160   5                      }
 161   4                      else
 162   4                          duty[2]+=1000;
 163   4                      pwm_duty(PWM3P_P24, duty[2]);
 164   4                      break;
 165   4                  }
 166   3                  case KEY3_PRESS:
 167   3                  {
 168   4                      if(duty[3]==8000)
 169   4                      {
 170   5                          duty[3]=2000;
 171   5                          pwm_duty(PWM4P_P26, 5000);//反转时先刹车
 172   5                          delay_ms(200);
 173   5                      }
 174   4                      else
C51 COMPILER V9.00   MAIN                                                                  05/18/2022 22:20:21 PAGE 4   

 175   4                          duty[3]+=1000;
 176   4                      pwm_duty(PWM4P_P26, duty[3]);
 177   4                      
 178   4                      
 179   4                      if(duty[4]==900)
 180   4                      {
 181   5                          duty[4]=700;
 182   5                          pwm_duty(PWM7_P33,  800);//反转时先归中
 183   5                          delay_ms(200);
 184   5                      }
 185   4                      else
 186   4                          duty[4]+=25;
 187   4                      pwm_duty(PWM7_P33, duty[4]);
 188   4                      break;
 189   4                  }
 190   3                  default:break;
 191   3              }
 192   2              
 193   2          }
 194   1      }
 195          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    861    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
